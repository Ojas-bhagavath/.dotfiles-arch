$mainMod = ALT
$TERMINAL = foot

# Output and Input volume control using amixer
bindel =, XF86AudioRaiseVolume, exec, amixer -q set Master 2%+ && eww -c ~/.config/eww/bar update volume-poll=true; sleep 1s; eww -c ~/.config/eww/bar update volume-poll=false
bindel =, XF86AudioLowerVolume, exec, amixer -q set Master 2%- && eww -c ~/.config/eww/bar update volume-poll=true; sleep 1s; eww -c ~/.config/eww/bar update volume-poll=false
bindel =, XF86AudioMute , exec, amixer -q set Master toggle && eww -c ~/.config/eww/bar update volume-poll=true; sleep 1s; eww -c ~/.config/eww/bar update volume-poll=false
bindel = $mainMod, XF86AudioRaiseVolume, exec, amixer -q set Capture 5%+
bindel = $mainMod, XF86AudioLowerVolume, exec, amixer -q set Capture 5%-
bindel = $mainMod, XF86AudioMute , exec, amixer -q set Capture toggle

# Brightness control using brightnessctl
bindel =, XF86MonBrightnessUp, exec, brightnessctl set +2% && eww -c ~/.config/eww/bar update brightness-poll=true; sleep 1s; eww -c ~/.config/eww/bar update brightness-poll=false
bindel =, XF86MonBrightnessDown , exec, brightnessctl set 2%- && eww -c ~/.config/eww/bar update brightness-poll=true; sleep 1s; eww -c ~/.config/eww/bar update brightness-poll=false

# Media control using playerctl
bindl =, XF86AudioPlay, exec, playerctl play
bindl =, XF86AudioPause, exec, playerctl pause
bindl =, XF86AudioNext, exec, playerctl next
bindl =, XF86AudioPrev, exec, playerctl previous
bindl = SUPER CTRL, N, exec, playerctl next
bindl = SUPER CTRL SHIFT, N, exec, playerctl previous
bindl = SUPER CTRL, TAB, exec, playerctl play-pause
bindl = SUPER CTRL, R, exec, playerctl loop Playlist
bindl = SUPER CTRL SHIFT, R, exec, playerctl loop Track
bindl = SUPER CTRL, S, exec, playerctl shuffle Toggle

bind =, Print, exec, grimblast copy area --freeze
bind = $mainMod, C, exec, hyprpicker -a --format=hex

unbind = CTRL, N

bind = SUPER CTRL, Print, exec, wl-screenrec -g "$$(~/bin/slurp)" -f ~/recording_$(date +"%Y-%m-%d_%H:%M:%S.mp4")
bind = SUPER CTRL SHIFT, Print, exec, wl-screenrec -g "$$(~/bin/slurp)" -a -f ~/recording_$(date +"%Y-%m-%d_%H:%M:%S.mp4")
bind = SUPER CTRL, Backspace, exec, killall -s SIGINT wl-screenrec

bind = $mainMod SHIFT, Q, killactive
bind = $mainMod SHIFT, code:115, exit

bind = $mainMod, RETURN, exec, $TERMINAL

bind = $mainMod, B, exec, qutebrowser
bind = $mainMod SHIFT, B, exec, librewolf

bind = SUPER, E, exec, $TERMINAL -e --title=lf --app-id=lf lf
bind = SUPER SHIFT, E, exec, thunar

bind = $mainMod, O, exec, obsidian

bind = $mainMod, M, exec, pkill ncspot || $TERMINAL -e ncspot
bind = $mainMod SHIFT, M, exec, pkill spotify || spotify

bind = $mainMod SHIFT, G, exec, geogebra

bind = $mainMod, S, exec, sioyek --new-window

bind = $mainMod, N, exec, $TERMINAL -e nvim

bind = $mainMod, V, togglefloating, 
bind = $mainMod, D, exec, pkill rofi || rofi -show run
bind = $mainMod SHIFT, D, exec, pkill rofi || rofi -show drun
bind = $mainMod SHIFT, W, exec, pkill waybar || waybar
bind = $mainMod SHIFT, E, exec, pkill eww ||eww open -c ~/.config/eww/bar/ bar
bind = $mainMod, P, pseudo, # dwindle
bind = $mainMod, T, togglesplit, # dwindle

# Move focus with mainMod + vim keys
bind = $mainMod, h, movefocus, l
bind = $mainMod, l, movefocus, r
bind = $mainMod, k, movefocus, u
bind = $mainMod, j, movefocus, d
# Move focus with mainMod + arrow keys
bind = $mainMod, left, movefocus, l
bind = $mainMod, right, movefocus, r
bind = $mainMod, up, movefocus, u
bind = $mainMod, down, movefocus, d

# Move the active window in a direction or to a monitor (vim keys)
bind = $mainMod SHIFT, h, movewindow, l
bind = $mainMod SHIFT, l, movewindow, r
bind = $mainMod SHIFT, k, movewindow, u
bind = $mainMod SHIFT, j, movewindow, d
# Move the active window in a direction or to a monitor (arrow keys)
bind = $mainMod SHIFT, left, movewindow, l
bind = $mainMod SHIFT, right, movewindow, r
bind = $mainMod SHIFT, up, movewindow, u
bind = $mainMod SHIFT, down, movewindow, d

# Switch workspaces with mainMod + [0-9]
bind = $mainMod, 1, workspace, 1
bind = $mainMod, 2, workspace, 2
bind = $mainMod, 3, workspace, 3
bind = $mainMod, 4, workspace, 4
bind = $mainMod, 5, workspace, 5
bind = $mainMod, 6, workspace, 6
bind = $mainMod, 7, workspace, 7
bind = $mainMod, 8, workspace, 8
bind = $mainMod, 9, workspace, 9
bind = $mainMod, 0, workspace, 10

# Move active window to a workspace with mainMod + SHIFT + [0-9]
bind = $mainMod SHIFT, 1, movetoworkspacesilent, 1
bind = $mainMod SHIFT, 2, movetoworkspacesilent, 2
bind = $mainMod SHIFT, 3, movetoworkspacesilent, 3
bind = $mainMod SHIFT, 4, movetoworkspacesilent, 4
bind = $mainMod SHIFT, 5, movetoworkspacesilent, 5
bind = $mainMod SHIFT, 6, movetoworkspacesilent, 6
bind = $mainMod SHIFT, 7, movetoworkspacesilent, 7
bind = $mainMod SHIFT, 8, movetoworkspacesilent, 8
bind = $mainMod SHIFT, 9, movetoworkspacesilent, 9
bind = $mainMod SHIFT, 0, movetoworkspacesilent, 10

# Scroll through existing workspaces with mainMod + scroll
bind = $mainMod, mouse_down, workspace, e+1
bind = $mainMod, mouse_up, workspace, e-1

# Move/resize windows with mainMod + LMB/RMB and dragging
bindm = $mainMod, mouse:272, movewindow
bindm = $mainMod, mouse:273, resizewindow

# Clipboard management with rofi
bind = SUPER, V, exec, rofi -modi clipboard:~/.config/rofi/cliphist-rofi -show clipboard
bind = SUPER SHIFT, V, exec, cliphist list | rofi -dmenu | cliphist decode | wl-copy

# Disable gaps and rounded corners
bind = WIN, F1, exec, ~/.config/hypr/conf/gaps.sh
